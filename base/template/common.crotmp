<:sub icon($icon)>
  <span class="icon" aria-hidden="true">
    <i class="fas fa-<$icon>"></i>
  </span>
</:>

<:sub column-button($icon, $text)>
  <span class="icon-text filter">
    <&icon($icon)><span><$text></span>
  </span>
</:>

<:sub messages-box($id, $text, $class, $title = '')>
  <div<?$class> class="<$class>"</?>>
    <label class="checkbox" title="<$title>">
      <input id="<$id>" type="checkbox"
        onclick="visibility<$id>(this.checked);">
      <strong><$text></strong>
    </label>
  </div>
</:>

<:sub system-messages-box($class = '')>
  <&messages-box(
    'SystemMessages', 'show system messages', $class,
    'Show server control messages,
such as people joining and leaving.'
  )>
</:>

<:sub commit-messages-box($class = '')>
  <&messages-box(
    'CommitMessages', 'hide commit messages', $class,
    'Hide any messages about commits
to any of the repositories that
are being reported on this channel.'
  )>
</:>

<:sub camelia-messages-box($class = '')>
  <&messages-box(
    'CameliaOutput', 'hide Camelia output', $class,
    'Hide any messages from the bot that
shows the result of execution of
code snippets.'
  )>
</:>

<:sub messages-input($name, $id, $placeholder, $tooltip, $title)>
  <div class="block">
    <p><strong><$name></strong></p>
    <div class="field has-addons">
      <div class="control">
        <input id="Messages<$id>" class="input" type="text"
          placeholder="<$placeholder>"
          title="<$title>"
          oninput="filterMessages<$id>(this.value);">
      </div>
      <div title="<$tooltip>" class="control has-tooltip-bottom">
        <button id="Exclude<$id>" class="button"
          onclick="filterExclude<$id>(this)">
          <span class="icon">
            <i class="fas fa-user-times"></i>
          </span>
        </button>
      </div>
    </div>
  </div>
</:>

<:sub nick-messages-input()>
  <&messages-input('User', 'ByNick', 'Filter on nick',
  'Only show messages that are NOT written
by the user(s) of which you specified
the name.',
  'Enter one or more (partial) names of
users, separated by comma, to see only
messages of those users.'
  )>
</:>

<:sub text-messages-input()>
  <&messages-input('Text', 'ByText', 'Filter by text',
  'Only show messages that do NOT contain
the text that you entered.',
  'Text that should appear in a message in order
for it to be shown.'
  )>
</:>

<:sub footer>
  <footer class="footer">
    <div class="container has-text-centered">
      <nav class="level">
        <!-- Left side -->
        <div class="level-left">
          <div class="level-item">
            <p>
              Powered by <a href="https://cro.services">Cro</a> and the <a href="https://raku.org">Raku Programming Language</a>
            </p>
          </div>
        </div>

        <!-- Right side -->
        <div class="level-right">
          <p class="level-item">
            Please report any issues / comments / feature requests <a href="https://github.com/lizmat/App-Raku-Log/issues">as an issue on App::Raku::Log.</a> Thank you!
          </p>
        </div>
      </nav>
    </div>
  </footer>
</:>

<:macro log-page($_, :$icon = 'question',
  :$is-live, :$is-gist, :$is-day, :$is-search
)>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title><:body></title>
    <link rel="stylesheet" href="/main.css">
    <script src="/bulma-calendar.min.js"></script>

    <script>
      function setCookie(name, value) {
          document.cookie = name + "=" + value + ";path=/";
          return value;
      }
      function getCookie(cname) {
          let name = cname + "=";
          let decodedCookie = decodeURIComponent(document.cookie);
          let cookies = decodedCookie.split(';');
          for(let i = 0; i <cookies.length; i++) {
              let c = cookies[i];
              while (c.charAt(0) == ' ') {
                  c = c.substring(1);
              }
              if (c.indexOf(name) == 0) {
                  let cookie = c.substring(name.length, c.length);
                  return cookie == "true"
                    ? true
                    : cookie == "false"
                      ? false
                      : cookie;
              }
          }
          return "";
      }

      document.addEventListener('DOMContentLoaded', () => {

          const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

          if ($navbarBurgers.length > 0) {
              $navbarBurgers.forEach( el => {
                  el.addEventListener('click', () => {
                      const target = el.dataset.target;
                      const $target = document.getElementById(target);
                      el.classList.toggle('is-active');
                      $target.classList.toggle('is-active');
                  });
              });
          }

          var options = {
            displayMode: 'inline',
             showHeader: false,
             showFooter: false,
              weekStart: 1,
             dateFormat: 'yyyy-MM-dd',
              startDate: new Date("<.start-date>"),
                endDate: new Date("<.end-date>"),
                minDate: new Date("<.first-date>"),
                maxDate: new Date("<.last-date>")
              // TODO anyone wanting to add a working minDate: 'today' here?
          };
          var calendars = bulmaCalendar.attach('[type="date"]', options);
          for (let i = 0; i < calendars.length; i++) {
              // Add listener to select event
              calendars[i].on('select', date => {
                  window.location = 'this/' + date.data.datePicker.value();
              });
          }

          <?$is-gist>hideChannelsWithoutTargets()</?>
          setGistTargets();
          markSelected();
          filterMessages();
      });

      var $gistTargets = getTargets();
      <?$is-gist>
        <!.entries>
          // no entries, but targets in cookie, so go show those
          if ($gistTargets) {
              window.location.href = 'gist.html?' + $gistTargets;
          }
        </!>
      </?>

      var $filterMessagesByNick = getCookie("MessagesByNick");
      var $filterMessagesByText = getCookie("MessagesByText");
      var $filterExcludeByNick  = getCookie("ExcludeByNick")  // false;
      var $filterExcludeByText  = getCookie("ExcludeByText")  // false;
      var $showSystemMessages   = getCookie("SystemMessages") // false;
      var $hideCommitMessages   = getCookie("CommitMessages") // false;
      var $hideCameliaOutput    = getCookie("CameliaOutput")  // false;

      var leftToggled = false; // TODO get this out of cookies later
      var rightToggled = false;
      /* Set the width of the sidebar to 300px and the left margin of the page content to 300px */
      function toggleSidebar(id) {
          var sidebar = document.getElementById(id);
          var isLeft = id === 'left-sidebar';
          var toggleState = isLeft ? leftToggled : rightToggled;
          sidebar.style.display = toggleState ? "block" : "none";
          if (isLeft) {
              leftToggled = !leftToggled;
          } else {
              rightToggled = !rightToggled;
          }
      }

<?$is-search>
      function submitIfEnter(id) {
          if (event.keyCode == 13) {
              document.getElementById(id).submit();
              return false;
          }
      }
</?>

<?$is-live>
      function scrollToBottom() {
          window.scrollTo(0, document.body.scrollHeight);
      }
      history.scrollRestoration = "manual";
      window.onload = scrollToBottom;
</?>

<?$is-gist>
      function hideChannelsWithoutTargets() {
          let items = document.querySelectorAll('li[id]');
          for (let i = 0; i != items.length; i++) {
              let item = items[i];
              if (!getTargets(item.getAttribute('id'))) {
                  item.classList.add('is-hidden');
              }
          }
      }
</?>

      function getTargets(channel = '<.channel>') {
          return getCookie(channel + "Targets");
      }

      function setPrimaryByElement(element, primary) {
          if (primary) {
              element.classList.remove('is-primary');
          }
          else {
              element.classList.add('is-primary');
          }
      }

      function setButtons(name, state) {
          let buttons = document.querySelectorAll('button[id=' + name + ']');
          for (let i = 0; i != buttons.length; i++) {
              setPrimaryByElement(buttons[i], state);
          }
      }

      function setVisibilityByElement(element, visible) {
          if (visible) {
              element.classList.remove('is-hidden');
          }
          else {
              element.classList.add('is-hidden');
          }
      }

      function setVisibilityByName(name, visible) {
          let rows = document.getElementsByClassName(name);
          for (let i = 0; i != rows.length; i++) {
              setVisibilityByElement(rows[i], visible);
          }
      }

      function setCheckboxes(name, state) {
          let boxes = document.querySelectorAll('input[id=' + name + ']');
          for (let i = 0; i != boxes.length; i++) {
              boxes[i].checked = state;
          }
      }

      function visibilitySystemMessages(
        show = $showSystemMessages,
        global = true  // by default, set checkboxes + cookie as well
      ) {
<!$is-live>
          if (global) {
              $showSystemMessages = setCookie('SystemMessages', !!show);
              setCheckboxes('SystemMessages', $showSystemMessages);
          }
          setVisibilityByName("special-system", $showSystemMessages)
</!>
      }

      function visibilityCommitMessages(hidden = $hideCommitMessages) {
          $hideCommitMessages = setCookie('CommitMessages', !!hidden);
          setCheckboxes('CommitMessages', $hideCommitMessages);
          setVisibilityByName("special-commit", !$hideCommitMessages)
      }

      function visibilityCameliaOutput(hidden = $hideCameliaOutput) {
          $hideCameliaOutput = setCookie('CameliaOutput', !!hidden);
          setCheckboxes('CameliaOutput', $hideCameliaOutput);
          setVisibilityByName("special-camelia", !$hideCameliaOutput)
      }

      function updateFilter(name, value) {
          let inputs = document.querySelectorAll('input[id=' + name + ']');
          for (let i = 0; i != inputs.length; i++) {
              inputs[i].value = value;
          }
          return setCookie(name, value);
      }

      function containsAnyTexts(haystack, needles) {
          for (let i = 0; i != needles.length; i++) {
              let needle = needles[i].trim();
              if (needle) {
                  if (haystack.toLowerCase().indexOf(needle) != -1) {
                      return true;
                  }
              }
              else {
                  return true;
              }
          }
          return false;
      }

      function containsText(haystack, text) {
          let needle = text.trim();
          return needle
            ? haystack.toLowerCase().indexOf(needle) != -1
            : true;
      }

      function filterMessages(
        nick = $filterMessagesByNick,
        text = $filterMessagesByText
      ) {
          let columns = document.querySelectorAll('td[nick]');

          $filterMessagesByNick = updateFilter("MessagesByNick", nick);
          $filterMessagesByText = updateFilter("MessagesByText", text);
          setButtons('ExcludeByNick', $filterExcludeByNick);
          setButtons('ExcludeByText', $filterExcludeByText);

          if (nick || text) {
              visibilitySystemMessages(false, false);

              let lcNicks = nick.toLowerCase().split(',');
              let lcText  = text.toLowerCase();

              for (let i = 0; i != columns.length; i++) {
                  let column = columns[i];
                  let parent = column.parentElement;

                  let nickOK = nick
                    && containsAnyTexts(column.getAttribute("nick"),lcNicks) == $filterExcludeByNick;
                  let textOK = text
                    && containsText(parent.cells[1].textContent, lcText) == $filterExcludeByText;

                  setVisibilityByElement(
                    parent,
                    (nick && text && nickOK && textOK)
                      || (!nick && textOK)
                      || (!text && nickOK)
                  )
              }
          }

          else {
              for (let i = 0; i != columns.length; i++) {
                  setVisibilityByElement(columns[i].parentElement, true)
              }
              visibilitySystemMessages();
              visibilityCommitMessages();
              visibilityCameliaOutput();
          }
      }

      function filterMessagesByNick(nick) {
          filterMessages(nick, $filterMessagesByText);
      }
      function filterMessagesByText(text) {
          filterMessages($filterMessagesByNick, text);
      }

      function filterExcludeByNick(button) {
          $filterExcludeByNick = setCookie(
            'ExcludeByNick',
            !!button.classList.contains('is-primary')
          );
          filterMessages();
      }
      function filterExcludeByText(button) {
          $filterExcludeByText = setCookie(
            'ExcludeByText',
            !!button.classList.contains('is-primary')
          );
          filterMessages();
      }

      function setGistTargets(targets = $gistTargets) {
          $gistTargets = setCookie('<.channel>Targets', targets);
          document.getElementById('Gist').href =
            '/<.channel>/gist.html?' + targets;
      }

      function elementOfTarget(element, target) {
          return document.querySelector(element + '[target="' + target + '"]');
      }

      function clearGistTargets() {
          setGistTargets("");
          markSelected();
      }

      function addVisibleTargets() {
          let newTargets = $gistTargets.split(',');;
          let haystack   = $gistTargets + ',';
          let trs = document.querySelectorAll('tr[target]');
          for (let i = 0; i != trs.length; i++) {
              let tr = trs[i];
              if (!tr.classList.contains('is-hidden')) {
                  let target = tr.getAttribute('target');
                  if (!haystack.includes(target + ',')) {
                      setTargetSelectionState(target, true);
                      newTargets.push(target);
                  }
              }
          }
          setGistTargets(newTargets.sort().join(','));
      }

      function removeVisibleTargets() {
          let currentTargets = $gistTargets.split(",");
          let newTargets = [];
          for (let i = 0; i != currentTargets.length; i++) {
              let target = currentTargets[i];
              let tr     = elementOfTarget('tr', target);
              if (tr) {
                  if (tr.classList.contains('is-hidden')) {
                      newTargets.push(target);
                  }
                  else {
                      setTargetSelectionState(target, false);
                  }
              }
          }
          setGistTargets(newTargets.sort().join(','));
      }

      function setTargetSelectionState(target, on) {
          let tr = elementOfTarget('tr', target);
          if (tr) {
              if (on) {
                  tr.classList.add('special-selected');
              }
              else {
                  tr.classList.remove('special-selected');
              }
          }
          let option = elementOfTarget('a', target);
          if (option) {
              if (on) {
                  option.classList.add('is-hidden');
                  option.nextSibling.classList.remove('is-hidden');
              }
              else {
                  option.classList.remove('is-hidden');
                  option.nextSibling.classList.add('is-hidden');
              }
          }
      }

      function markSelected() {
          let links = document.querySelectorAll('a[target]');
          let haystack = $gistTargets + ',';
          for (let i = 0; i != links.length; i++) {
              let target = links[i].getAttribute('target');
              setTargetSelectionState(target, haystack.includes(target + ','));
          }
      }

      function removeTargetFromGist(link) {
          let target = link.previousSibling.getAttribute('target');
          let currentTargets = $gistTargets.split(',');
          let newTargets = [];
          let remove = false;
          for (let i = 0; i != currentTargets.length; i++) {
              let current = currentTargets[i];
              if (current) {
                  if (current == target) {
                      remove = true;
                  }
                  else {
                      newTargets.push(current);
                  }
              }
          }
          if (remove) {
              setTargetSelectionState(target, false);
          }
          setGistTargets(newTargets.sort().join(','));
      }

      function addTargetToGist(link) {
          let target = link.getAttribute('target');
          let currentTargets = $gistTargets.split(',');
          let newTargets = [];
          let add = true;
          for (let i = 0; i != currentTargets.length; i++) {
              let current = currentTargets[i];
              if (current) {
                  if (current == target) {
                      add = false;
                  }
                  else {
                      newTargets.push(current);
                  }
              }
          }
          if (add) {
              setTargetSelectionState(target, true);
              newTargets.push(target);
          }
          setGistTargets(newTargets.sort().join(','));
      }
    </script>
  </head>
  <body class="has-navbar-fixed-top">

    <!-- Header -->
    <nav class="navbar is-fixed-top" role="navigation" aria-label="main navigation">

      <div id="navbar-left-toggle"
<?$is-search>
  title="Toggle search options sidebar"
</?>
<!$is-search>
  title="Toggle filter sidebar"
</!>
        class="navbar-filter-settings has-tooltip-bottom">
        <a class="navbar-item navbar-sidebar-btn " onclick="toggleSidebar('left-sidebar')">

          <span class="icon-text filter">
            <&icon('cogs')>
            <span class="sidebar-title">
              <?$is-search>Search</?><!$is-search>Filter</!>
            </span>
          </span>
          <&icon('chevron-left')>
        </a>
      </div>

      <div class="navbar-brand">
        <!-- Add action to open modal window with channels or the right sidebar -->
        <div class="navbar-item dropdown is-hoverable">
          <div class="dropdown-trigger">
            <span
<?$is-search>
title="Select the channel on which to
repeat the current search."
</?>
<?$is-day>
title="Select the channel of which to show
the messages of <.date-human>."
</?>
<?$is-live>
title="Select the channel of which to see the
messages as they come in."
</?>
              class="is-text navbar-current-channel-name"
              aria-haspopup="true"
              aria-controls="dropdown-menu4">
              <span class="icon-text">
                <&icon($icon)><span><.channel></span><&icon('chevron-down')>
              </span>
            </span>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
                    <@channels : $c>
                      <?{ .channel ne $c }>
                        <li id="<$c>">
                          <a href="/<$c>/<?$is-live>live</?><?$is-day><.date></?><?$is-gist>gist</?>.html"><$c></a>
                        </li>
                      </?>
                    </@>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

        <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navMenu">
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </a>
      </div>

      <div id="navMenu" class="navbar-menu">
        <div class="navbar-start">
        <div class="navbar-item dropdown is-hoverable">
          <div class="navbar-delimiter"></div>
          <div class="dropdown-trigger">
            <span class="is-text navbar-current-channel-name"
              title="Select the way you would like to
browse the messages on the #<.channel> channel."
              aria-haspopup="true"
              aria-controls="dropdown-menu4">
              <span class="icon-text">
                <&icon('book')><span>Browse</span><&icon('chevron-down')>
              </span>
            </span>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
<!$is-live>
  <li title="Follow the messages on the #<.channel>
channel as they are happening.  Allows
scrolling-back in time.">
    <a href="/<.channel>/live.html">
      <&icon('signal')>
      <span>Live</span>
    </a>
  </li>
</!>
                    <li title="Look at messages of the last date
for which messages have been seen
on the #<.channel> channel.">
                      <a href="/<.channel>/today">
                        <&icon('inbox')>
                        <span>Today</span>
                      </a>
                    </li>
                    <li title="Look at the messages of a
randomly selected date on the
#<.channel> channel for that special
serendipitous experience.">
                      <a href="/<.channel>/random">
                        <&icon('random')>
                        <span>I Feel Lucky</span>
                      </a>
                    </li>
<!$is-search>
  <li title="Search the messages of the #<.channel>
channel for a specific text, and/or
by a specific author, and/or for a
limited period.">
    <a href="/<.channel>/search.html">
      <&icon('search')>
      <span>Search</span>
    </a>
  </li>
</!>
<?$is-day>
  <li title="Download the raw log of the #<.channel>
channel on <.date-human>.">
    <a href="/<.channel>/<.date>.log">
      <&icon('download')>
      <span>Raw</span>
    </a>
  </li>
</?>
                    <li title="Look at an overview of the
#<.channel> channel and some background information.">
                      <a href="/<.channel>/index.html">
                        <&icon('star')>
                        <span>Overview</span>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="navbar-item dropdown is-hoverable">
          <div class="navbar-delimiter"></div>
          <div class="dropdown-trigger">
            <span class="is-text navbar-current-channel-name"
              title="A message can be added or removed from
your collection of messages for the #<.channel>
channel from the ... pulldown with each message.
Here you can select on what to do with that
selection."
              aria-haspopup="true"
              aria-controls="dropdown-menu4">
              <span class="icon-text">
                <&icon('shopping-cart')><span>Gist</span><&icon('chevron-down')>
              </span>
            </span>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
                    <li title="Show the messages of the #<.channel>
channel that have been collected by
you so far, or save the link for other
uses.">
                      <a id="Gist" href="/<.channel>/gist.html">
                        <span>Show&nbsp;collected&nbsp;messages</span>
                      </a>
                    </li>
                    <li title="Reset the current selection
of messages to be shown in
a gist.">
                      <a onclick="clearGistTargets()">
                        <span>Clear&nbsp;selected&nbsp;messages</span>
                      </a>
                    </li>
                    <li title="Add the currently visible
messages to the selection of
messages to be shown in a gist.">
                      <a onclick="addVisibleTargets()">
                        <span>Select&nbsp;all&nbsp;visible&nbsp;messages</span>
                      </a>
                    </li>
                    <li title="Remove all currently visible
messages from the selection
(if they were selected), while
keeping any non-visible messages
in the selection.">
                      <a onclick="removeVisibleTargets()">
                        <span>Remove&nbsp;all&nbsp;visible&nbsp;messages</span>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="navbar-delimiter"></div>
        <a title="Go to the home page of the Raku IRC log browser"
          href="/" class="navbar-item has-tooltip-bottom"><img
          src="/camelia.png" width="40" height="28"
        ></a>

          <!-- Mobile only forms in header -->
          <div id="mobile-forms" class="is-hidden-tablet">
  <!-- TODO: center text here -->
<?$is-search>
  <div class="block has-text-centered">
    <span class="title is-4">Search</span>
  </div>
</?>
<!$is-search>
  <div class="block has-text-centered">
    <span class="title is-4">Filter</span>
  </div>
  <&nick-messages-input>
  <&text-messages-input>
  <!$is-live><&system-messages-box></!>
  <&commit-messages-box>
  <&camelia-messages-box>
</!>
          </div>
          <!-- Mobile only forms in header ends -->

        </div>
      </div>
      </div>

    </nav>
    <!-- header ends -->

    <!-- Left sidebar  -->
    <div id="wrapper">
      <div class="columns">
        <div id="left-column" class="column is-narrow is-hidden-mobile">
<?$is-search>
  <div id="left-sidebar" class="sidebar is-hidden-mobile">
    <form id="Search">
      <div class="field">
        <label class="label">Query</label>
        <div class="control">
          <input name="query" type="text"
            value="<.query>"
            class="input"
            placeholder="Look for this string"
            title="Show the messages that contain the
text that you enter here."
            onkeydown="submitIfEnter('Search')">
        </div>
      </div>
      <div class="field">
        <div class="control">
          <div class="select">
            <select name="type">
              <@type-options : $opt>
                <option
                  value="<$opt.key>"
                  <?{ $opt.key eq .type }> selected="selected"</?>>
                  <$opt.value>
                </option>
              </@>
            </select>
          </div>
        </div>
      </div>
      <div class="block">
        <div class="field">
          <div class="control">
            <label class="checkbox">
              <input name="all" type="checkbox"
                value="True"<?.all> checked</?>>
              must contain all words
            </label>
          </div>
        </div>
        <div class="field">
          <div class="control">
            <label class="checkbox">
              <input name="ignorecase" type="checkbox"
                value="True"<?.ignorecase> checked</?>>
              case insensitive
            </label>
          </div>
        </div>
        <div class="field">
          <label class="label">Username(s)</label>
          <div class="control">
            <input name="nicks" type="text"
              value="<.nicks>"
              class="input"
              placeholder="Limit search to these nick(s)"
              onkeydown="submitIfEnter('Search')">
          </div>
        </div>
        <div class="field">
          <div class="control">
            <label class="checkbox">
              <input type="checkbox" name="include-aliases"
                value="True"<?.include-aliases> checked</?>>
              include nick aliases
            </label>
          </div>
        </div>
        <div class="field">
          <label class="label">Channel</label>
          <div class="control">
            <div class="select">
              <select name="channel">
                <@channels : $c>
                  <option value="<$c>"
                    <?{ $c eq .name }> selected="selected"</?>>
                    <$c>
                  </option>
                </@>
              </select>
            </div>
          </div>
        </div>
        <div class="field">
          <label class="label">Show</label>
          <div class="control">
            <div class="select">
              <select name="message-type">
                <@message-options : $opt>
                  <option value="<$opt.key>"
                    <?{ $opt.key eq .message-type }> selected="selected"</?>>
                    <$opt.value>
                  </option>
                </@>
              </select>
            </div>
          </div>
        </div>
        <div class="field">
          <label class="label">Results per page</label>
          <div class="control">
            <div class="select">
              <select name="entries-pp">
                <@entries-pp-options : $opt>
                  <option value="<$opt>"
                    <?{ $opt eq .entries-pp }> selected="selected"</?>>
                    <$opt>
                  </option>
                </@>
               </select>
            </div>
          </div>
        </div>
        <div class="control">
          <strong>From:</strong>
          <input class="input" type="date">
        </div>
        <div class="control">
          <strong>Until:</strong>
          <input class="input" type="date">
        </div>
        <div class="block">
          <div class="control mt-3">
            <button class="button is-primary">Submit</button>
          </div>
        </div>
      </div>
    </form>
  </div>
</?>
<!$is-search>
  <div id="left-sidebar" class="sidebar is-hidden-mobile">
    <&nick-messages-input>
    <&text-messages-input>
    <div class="block">
      <p><strong>Calendar</strong></p>
      <input id="sidebar-datepicker" type="date">
    </div>
    <?$is-day><&system-messages-box('block')></?>
    <&commit-messages-box('block')>
    <&camelia-messages-box('block')>
  </div>
</!>
        </div>
        <!-- Left sidebar ends -->

        <!-- main container -->
        <div class="column">

          <section class="section">
            <div id="main-container" class="container">

              <?$is-day>
              <nav class="level">
                <!-- Left side -->
                <div class="level-left">
                  <div class="level-item">
                    <div class="msg-log-date-switcher">
                      <a href="/<.channel>/prev/<.date>">
                        <button class="button is-primary">
                          <&icon('chevron-left')>
                        </button>
                      </a>
                      <span class="title is-4 today-date"><.date-human></span>
                      <a href="/<.channel>/next/<.date>">
                        <button class="button is-primary">
                          <&icon('chevron-right')>
                        </button>
                      </a>
                    </div>
                  </div>
                </div>
              </nav>
              </?>


              <!-- message log -->
              <section id="message-log">
                <table class="table message-table is-fullwidth">
                <?.initial-topic-text>
                  <tr class="special-topic">
                    <td colspan="4">
                      <&HTML(.initial-topic-text)><br/>
                      Set by <&HTML(.initial-topic-nick)> on
                      <a href="/<.channel>/<.initial-topic-date>.html#<.initial-topic-relative-target>"><.initial-topic-human-date></a>.
                    </td>
                  </tr>
                </?>
                <@entries>
                  <?{ $is-live || $is-gist }>
                    <?.human-date>
                      <tr class="special-date">
                        <td colspan="4"><.human-date></td>
                      </tr>
                    </?>
                  </?>
                  <tr<?.relative-target> id="<.relative-target>"</?>
                    <?.target>target="<.target>"</?>
                    <?.control-events> class="special-system"</?>
                    <?.commit> class="special-commit"</?>
                    <?.camelia> class="special-camelia"</?>
                    <?.test-t> class="special-test"</?>
                    <?.same-nick> class="special-same-nick"</?>
                    <?$is-gist> class="special-selected"</?>
                  >
                    <?.control-events>
                      <td/>
                      <td colspan="2">
                        <div class="is-size-7">
                          <@control-events>
                            <b id="<.id>"><.hh-mm></b>
                            <&HTML(.message)>
                          </@>
                        </div>
                      </td>
                    </?>
                    <!.control-events>
                      <td nick="<&HTML(.nick)>"><!.same-nick><&HTML(.sender)></!></td>
                      <td
                        <?.code> class="column-code"</?>
                        <?.commit> class="column-commit"</?>
                      ><@targets><span id="<$_>"/></@><&HTML(.message)></td>
                      <td class="column-time"><.hh-mm></td>
                    </!>
                    <td class="column-buttons">
                      <div class="dropdown is-hoverable">
                        <div class="dropdown-trigger">
                          <button class="button is-text" aria-haspopup="true" aria-controls="dropdown-menu4">
                            <span class="icon is-small">
                              <i class="fas fa-ellipsis-h" aria-hidden="true"></i>
                            </span>
                          </button>
                        </div>
                        <div class="dropdown-menu msg-mobile-dropdown" id="dropdown-menu4" role="menu">
                          <div class="dropdown-content">
                            <div class="dropdown-item">
                              <div class="menu">
                                <ul class="menu-list">
                                  <li>
<?$is-day>
  <a id="<.relative-target>"
    class="msg-log-btn"
    href="#<.relative-target>"
    title="Reference to this message to be used in other
places, or just click on it to make this message
move to the top of the page"
  ><&column-button('link', 'Message link')></a>
</?>
<!$is-day>
  <a class="msg-log-btn"
    href="/<.channel>/<.date>.html#<.relative-target>"
    title="Show this message in the daily overview"
  ><&column-button('link', 'Show on day')></a>
</!>
                                  </li>
                                  <li>
  <a
    class="msg-log-btn"
    target="<.target>"
    onclick="addTargetToGist(this)"
    title="Allows you to collect messages relevant to a
discussion and create a link for others to refer
to that discussion"
  ><&column-button('cart-plus', 'Add to gist')></a><a
    class="msg-log-btn is-hidden"
    onclick="removeTargetFromGist(this)"
    title="Remove this message from the current selection"
  ><&column-button('times', 'Remove')></a>
                                  </li>
<?.runcode-link>
  <li>
    <a href="<.runcode-link>"
      class="msg-log-btn"
      title="Allows you to run this Raku code to see what
the resulting output would be now"
    ><&column-button('play-circle', 'Run code')></a>
  </li>
</?>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </td>
                  </tr>
                </@>
                </table>

              </section>
              <!-- message log ends -->

            </div>
          </section>

        </div>
        <!-- main container ends -->

        <!-- Right sidebar -->
        <div id="right-column" class="column is-narrow is-hidden-touch">
          <!-- We have an empty sidebar here so the content would be nicely centered -->
        </div>
        <!-- Right sidebar ends -->

      </div>
    </div>
    <!-- Columns end -->

    <!-- Include Font Awesome -->
    <script defer src="/fontawesome.js"></script>

  </body>
</html>
</:>
