<:sub column-button($icon, $text)>
  <span class="icon-text filter">
    <span class="icon">
      <i class="fas fa-<$icon>"></i>
    </span>
    <span><$text></span>
  </span>
</:>

<:sub messages-box($id, $text, $class)>
  <div<?$class> class="<$class>"</?>>
    <label class="checkbox"> <input id="<$id>" type="checkbox"
      onclick="visibility<$id>(this.checked);">
      <strong><$text></strong>
    </label>
  </div>
</:>

<:sub system-messages-box($class = '')>
  <&messages-box('SystemMessages', 'show system messages', $class)>
</:>

<:sub commit-messages-box($class = '')>
  <&messages-box('CommitMessages', 'hide commit messages', $class)>
</:>

<:sub camelia-messages-box($class = '')>
  <&messages-box('CameliaOutput', 'hide Camelia output', $class)>
</:>

<:sub messages-input($title, $id, $placeholder, $tooltip)>
  <div class="block">
    <p><strong><$title></strong></p>
    <div class="field has-addons">
      <div class="control">
        <input id="Messages<$id>" class="input" type="text"
          placeholder="<$placeholder>"
          oninput="filterMessages<$id>(this.value);">
      </div>
      <div class="control has-tooltip-bottom"
        data-tooltip="<$tooltip>">
        <button id="Exclude<$id>" class="button"
          onclick="filterExclude<$id>(this)">
          <span class="icon">
            <i class="fas fa-user-times"></i>
          </span>
        </button>
      </div>
    </div>
  </div>
</:>

<:sub nick-messages-input()>
  <&messages-input('User', 'ByNick', 'Filter on nick', 'Exclude user')>
</:>

<:sub text-messages-input()>
  <&messages-input('Text', 'ByText', 'Filter by text', 'Exclude text')>
</:>

<:sub menu-item($icon, $title, $channel, $href, $tooltip)>
  <div class="navbar-delimiter"></div>
  <a id="<$title>"
    href="/<$channel>/<$href>"
    class="navbar-item has-tooltip-bottom"
    data-tooltip="<$tooltip>">
    <span class="icon-text">
      <span class="icon"><i class="fas fa-<$icon>"></i></span>
      <span class="navbar-item-title"><$title></span>
    </span>
  </a>
</:>

<:sub column-buttons($_)>
  <td class="column-buttons">

    <div class="dropdown is-hoverable">
      <div class="dropdown-trigger">
        <button class="button is-text" aria-haspopup="true" aria-controls="dropdown-menu4">
          <span class="icon is-small">
            <i class="fas fa-ellipsis-h" aria-hidden="true"></i>
          </span>
        </button>
      </div>
      <div class="dropdown-menu msg-mobile-dropdown" id="dropdown-menu4" role="menu">
        <div class="dropdown-content">
          <div class="dropdown-item">
            <div class="menu">
              <ul class="menu-list">
                <li>
                  <a id="<.relative-target>"
                    href="#<.relative-target>"
                    class="msg-log-btn"
                    title="Reference to this message to be used in other
places, or just click on it to make this message
move to the top of the page"
                  ><&column-button('link', 'Message link')></a>
                </li>
                <li>
                  <a onclick="addTargetToGist('<.target>')"
                    class="msg-log-btn"
                    title="Allows you to collect messages relevant to a
discussion and create a link for others to refer
to that discussion"
                  ><&column-button('cart-plus', 'Add to gist')></a>
                </li>
                <?.runcode-link><li>
                  <a href="<.runcode-link>"
                    class="msg-log-btn"
                    title="Allows you to run this Raku code to see what
the resulting output would be now"
                  ><&column-button('play-circle', 'Run code')></a>
                </li></?>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </td>
</:>

<:sub footer>
  <footer class="footer">
    <div class="container has-text-centered">
      <nav class="level">
        <!-- Left side -->
        <div class="level-left">
          <div class="level-item">
            <p>
              Powered by <a href="https://cro.services">Cro</a> and the <a href="https://raku.org">Raku Programming Language</a>
            </p>
          </div>
        </div>

        <!-- Right side -->
        <div class="level-right">
          <p class="level-item">
            Please report any issues / comments / feature requests <a href="https://github.com/lizmat/App-Raku-Log/issues">as an issue on App::Raku::Log.</a> Thank you!
          </p>
        </div>
      </nav>
    </div>
  </footer>

  <!-- Include Font Awesome -->
  <script defer src="/fontawesome.js"></script>
</:>

<:macro log-page($_, $is-live)>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title><:body></title>
    <link rel="stylesheet" href="/main.css">
    <script src="/bulma-calendar.min.js"></script>

    <script>
      function setCookie(name, value) {
          document.cookie = name + "=" + value + ";path=/";
          return value;
      }
      function getCookie(cname) {
          let name = cname + "=";
          let decodedCookie = decodeURIComponent(document.cookie);
          let ca = decodedCookie.split(';');
          for(let i = 0; i <ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
              c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
              let cookie = c.substring(name.length, c.length);
              return cookie == "true"
                ? true
                : cookie == "false"
                  ? false
                  : cookie;
            }
          }
          return "";
      }

      document.addEventListener('DOMContentLoaded', () => {

          const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

          if ($navbarBurgers.length > 0) {
              $navbarBurgers.forEach( el => {
                  el.addEventListener('click', () => {
                      const target = el.dataset.target;
                      const $target = document.getElementById(target);
                      el.classList.toggle('is-active');
                      $target.classList.toggle('is-active');
                  });
              });
          }

          var options = {
              displayMode: 'inline', showHeader: false, showFooter: false, weekStart: 1,
              dateFormat: 'yyyy-MM-dd', startDate: new Date("<.date>"), endDate: new Date("<.date>"),
              minDate: new Date("<.first-date>"), maxDate: new Date("<.last-date>")
              // TODO anyone wanting to add a working minDate: 'today' here?
          };
          var calendars = bulmaCalendar.attach('[type="date"]', options);
          for (var i = 0; i < calendars.length; i++) {
              // Add listener to select event
              calendars[i].on('select', date => {
                  window.location = 'this/' + date.data.datePicker.value();
              });
          }

          setGistTargets();
          filterMessages();
      });

      var $filterMessagesByNick = getCookie("MessagesByNick");
      var $filterMessagesByText = getCookie("MessagesByText");
      var $filterExcludeByNick  = getCookie("ExcludeByNick")  // false;
      var $filterExcludeByText  = getCookie("ExcludeByText")  // false;
      var $showSystemMessages   = getCookie("SystemMessages") // false;
      var $hideCommitMessages   = getCookie("CommitMessages") // false;
      var $hideCameliaOutput    = getCookie("CameliaOutput")  // false;
      var $gistTargets          = getCookie("Targets");

      var leftToggled = false; // TODO get this out of cookies later
      var rightToggled = false;
      /* Set the width of the sidebar to 300px and the left margin of the page content to 300px */
      function toggleSidebar(id) {
          var sidebar = document.getElementById(id);
          var isLeft = id === 'left-sidebar';
          var toggleState = isLeft ? leftToggled : rightToggled;
          sidebar.style.display = toggleState ? "block" : "none";
          if (isLeft) {
              leftToggled = !leftToggled;
          } else {
              rightToggled = !rightToggled;
          }
      }

      function setPrimaryByElement(element, primary) {
          if (primary) {
              element.classList.remove('is-primary');
          }
          else {
              element.classList.add('is-primary');
          }
      }

      function setButtons(name, state) {
          let buttons = document.querySelectorAll('button[id=' + name + ']');
          for (var i = 0; i != buttons.length; i++) {
              setPrimaryByElement(buttons[i], state);
          }
      }

      function setVisibilityByElement(element, visible) {
          if (visible) {
              element.classList.remove('is-hidden');
          }
          else {
              element.classList.add('is-hidden');
          }
      }

      function setVisibilityByName(name, visible) {
          let rows = document.getElementsByClassName(name);
          for (var i = 0; i != rows.length; i++) {
              setVisibilityByElement(rows[i], visible);
          }
      }

      function setCheckboxes(name, state) {
          let boxes = document.querySelectorAll('input[id=' + name + ']');
          for (var i = 0; i != boxes.length; i++) {
              boxes[i].checked = state;
          }
      }

      function visibilitySystemMessages(
        show = $showSystemMessages,
        global = true  // by default, set checkboxes + cookie as well
      ) {
<!$is-live>
          if (global) {
              $showSystemMessages = setCookie('SystemMessages', !!show);
              setCheckboxes('SystemMessages', $showSystemMessages);
          }
          setVisibilityByName("special-system", $showSystemMessages)
</!>
      }

      function visibilityCommitMessages(hidden = $hideCommitMessages) {
          $hideCommitMessages = setCookie('CommitMessages', !!hidden);
          setCheckboxes('CommitMessages', $hideCommitMessages);
          setVisibilityByName("special-commit", !$hideCommitMessages)
      }

      function visibilityCameliaOutput(hidden = $hideCameliaOutput) {
          $hideCameliaOutput = setCookie('CameliaOutput', !!hidden);
          setCheckboxes('CameliaOutput', $hideCameliaOutput);
          setVisibilityByName("special-camelia", !$hideCameliaOutput)
      }

      function updateFilter(name, value) {
          let inputs = document.querySelectorAll('input[id=' + name + ']');
          for (var i = 0; i != inputs.length; i++) {
              inputs[i].value = value;
          }
          return setCookie(name, value);
      }

      function containsAnyTexts(haystack, needles) {
          for (var i = 0; i != needles.length; i++) {
              let needle = needles[i];
              if (needle && haystack.toLowerCase().indexOf(needle) != -1) {
                  return true;
              }
          }
          return false;
      }

      function containsText(haystack, needle) {
          return haystack.toLowerCase().indexOf(needle) != -1
      }

      function filterMessages(
        nick = $filterMessagesByNick,
        text = $filterMessagesByText
      ) {
          let columns = document.querySelectorAll('td[nick]');

          $filterMessagesByNick = updateFilter("MessagesByNick", nick);
          $filterMessagesByText = updateFilter("MessagesByText", text);
          setButtons('ExcludeByNick', $filterExcludeByNick);
          setButtons('ExcludeByText', $filterExcludeByText);

          if (nick || text) {
              visibilitySystemMessages(false, false);

              let lcNicks = nick.toLowerCase().split(',');
              let lcText  = text.toLowerCase();

              for (var i = 0; i != columns.length; i++) {
                  let column = columns[i];
                  let parent = column.parentElement;

                  let nickOK = nick
                    && containsAnyTexts(column.getAttribute("nick"),lcNicks) == $filterExcludeByNick;
                  let textOK = text
                    && containsText(parent.cells[1].textContent, lcText) == $filterExcludeByText;

                  setVisibilityByElement(
                    parent,
                    (nick && text && nickOK && textOK)
                      || (!nick && textOK)
                      || (!text && nickOK)
                  )
              }
          }

          else {
              for (var i = 0; i != columns.length; i++) {
                  setVisibilityByElement(columns[i].parentElement, true)
              }
              visibilitySystemMessages();
              visibilityCommitMessages();
              visibilityCameliaOutput();
          }
      }

      function filterMessagesByNick(nick) {
          filterMessages(nick, $filterMessagesByText);
      }
      function filterMessagesByText(text) {
          filterMessages($filterMessagesByNick, text);
      }

      function filterExcludeByNick(button) {
          $filterExcludeByNick = setCookie(
            'ExcludeByNick',
            !!button.classList.contains('is-primary')
          );
          filterMessages();
      }
      function filterExcludeByText(button) {
          $filterExcludeByText = setCookie(
            'ExcludeByText',
            !!button.classList.contains('is-primary')
          );
          filterMessages();
      }

      function setGistTargets(targets = $gistTargets) {
          $gistTargets = setCookie('Targets', targets);
          document.getElementById('Gist').href = 'gist.html?' + targets;
      }

      function addTargetToGist(target) {
          let currentTargets = $gistTargets.split(',');
          let newTargets = [];
          let add = true;
          for (var i = 0; i != currentTargets.length; i++) {
              let current = currentTargets[i];
              if (current) {
                  if (current == target) {
                      add = false;
                  }
                  else {
                      newTargets.push(current);
                  }
              }
          }
          if (add) {
              newTargets.push(target);
          }
          setGistTargets(newTargets.sort().join(','));
      }
    </script>
  </head>
  <body class="has-navbar-fixed-top">

    <!-- Header -->
    <nav class="navbar is-fixed-top" role="navigation" aria-label="main navigation">

      <div id="navbar-left-toggle" class="navbar-filter-settings has-tooltip-bottom" data-tooltip="Toggle filter sidebar">
        <a class="navbar-item navbar-sidebar-btn " onclick="toggleSidebar('left-sidebar')">

          <span class="icon-text filter">
            <span class="icon">
              <i class="fas fa-cogs"></i>
            </span>
            <span class="sidebar-title">Filter</span>
          </span>

          <span class="icon icon-sidebar-state">
            <i class="fas fa-chevron-left"></i>
          </span>
        </a>
      </div>


      <div class="navbar-brand">
        <a class="navbar-item" href="/">
          <img src="https://raw.githubusercontent.com/Raku/marketing/master/LOGOs/Camelia/Alt-Variants/Perfect-Rainbow--1533512427/Camelia%20-%20Recoloured%20-%20Perfect%20Rainbow.png" width="40" height="28" alt="Home">
        </a>


        <!-- Add action to open modal window with channels or the right sidebar -->

        <div class="navbar-item dropdown is-hoverable">
          <div class="dropdown-trigger">
            <a class="is-text navbar-current-channel-name" aria-haspopup="true" aria-controls="dropdown-menu4">
              <span class="icon-text">
                <span>#<.channel></span>
                <span class="icon">
                  <i class="fas fa-chevron-down" aria-hidden="true"></i>
                </span>
              </span>
            </a>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
                    <@channels : $c>
                      <li><a href="/<$c>/<?$is-live>live</?><!$is-live><.date></!>.html">#<$c></a></li>
                    </@>
                  </ul>

                </div>

              </div>
            </div>
          </div>
        </div>


        <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navMenu">
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </a>
      </div>

      <div id="navMenu" class="navbar-menu">
        <div class="navbar-start">
          <!$is-live>
            <&menu-item('signal', 'Live', .channel, 'live.html',
              'Follow the #' ~ .channel ~ ' channel live')>
          </!>

          <&menu-item('inbox', 'Today', .channel, 'today',
            'Show messages of today')>

          <&menu-item('paw', 'Then', .channel, 'random',
            'See the messages of a randomly selected date')>

          <!$is-live>
            <&menu-item('download', 'Raw', .channel, .date ~ '.log',
              'Download raw log of #' ~ .channel ~ ' on ' ~ .date-human)>
          </!>

          <&menu-item('shopping-cart', 'Gist', .channel, 'gist.html',
            'Show collected messages as a gist')>

          <&menu-item('search', 'Search', .channel, 'search.html',
            'Search the #' ~ .channel ~ ' channel')>

          <!-- Mobile only forms in header -->
          <div id="mobile-forms" class="is-hidden-tablet">
            <!-- TODO: center text here -->
            <div class="block has-text-centered">
            <span class="title is-4">Filter settings</span>
            </div>
            <&nick-messages-input>
            <&text-messages-input>
            <!$is-live><&system-messages-box></!>
            <&commit-messages-box>
            <&camelia-messages-box>
          </div>
          <!-- Mobile only forms in header ends -->

        </div>
      </div>
      </div>

    </nav>
    <!-- header ends -->

    <!-- Left sidebar  -->
    <div id="wrapper">
      <div class="columns">
        <div id="left-column" class="column is-narrow is-hidden-mobile">
          <div id="left-sidebar" class="sidebar is-hidden-mobile">
            <&nick-messages-input>
            <&text-messages-input>

            <!$is-live>
              <div class="block">
                <p><strong>Calendar</strong></p>

                <input id="sidebar-datepicker" type="date">
              </div>

              <&system-messages-box('block')>
            </!>

            <&commit-messages-box('block')>
            <&camelia-messages-box('block')>
          </div>
        </div>
        <!-- Left sidebar ends -->

        <!-- main container -->
        <div class="column">

          <section class="section">
            <div id="main-container" class="container">

              <!$is-live>
              <nav class="level">
                <!-- Left side -->
                <div class="level-left">
                  <div class="level-item">

                    <div class="msg-log-date-switcher">

                      <a href="/<.channel>/prev/<.date>">
                        <button class="button is-primary">
                          <span class="icon">
                            <i class="fas fa-chevron-left"></i>
                          </span>
                        </button>
                      </a>

                      <span class="title is-4 today-date"><.date-human></span>

                      <a href="/<.channel>/next/<.date>">
                        <button class="button is-primary">
                          <span class="icon">
                            <i class="fas fa-chevron-right"></i>
                          </span>
                        </button>
                      </a>
                    </div>

                  </div>
                </div>
              </nav>
              </!>


              <!-- message log -->
              <section id="message-log">
                <table class="table message-table is-fullwidth">
                <@entries>
                  <?$is-live>
                    <?.human-date>
                      <tr class="special-date">
                        <td colspan="4"><.human-date></td>
                      </tr>
                    </?>
                  </?>
                  <tr id="<.relative-target>"
                    <?.control-events> class="special-system"</?>
                    <?.commit> class="special-commit"</?>
                    <?.camelia> class="special-camelia"</?>
                    <?.test-t> class="special-test"</?>
                    <?.same-nick> class="special-same-nick"</?>
                  >
                    <?.control-events>
                      <td/>
                      <td colspan="2">
                        <div class="is-size-7">
                        <@control-events>
                          <b><.key></b> <&HTML(.value)>
                        </@>
                        </div>
                      </td>
                    </?>
                    <!.control-events>
                      <td nick="<&HTML(.nick)>"><!.same-nick><&HTML(.sender)></!></td>
                      <td
                        <?.code> class="column-code"</?>
                        <?.commit> class="column-commit"</?>
                      ><&HTML(.message)></td>
                      <td class="column-time"><.hh-mm></td>
                    </!>
                    <&column-buttons($_)>
                  </tr>
                </@>
                </table>

              </section>
              <!-- message log ends -->

            </div>
          </section>

        </div>
        <!-- main container ends -->

        <!-- Right sidebar -->
        <div id="right-column" class="column is-narrow is-hidden-touch">
          <!-- We have an empty sidebar here so the content would be nicely centered -->
        </div>
        <!-- Right sidebar ends -->

      </div>
    </div>
    <!-- Columns end -->
    <&footer>

  </body>
</html>
</:>
