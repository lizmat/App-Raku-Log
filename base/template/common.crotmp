<:use 'base/template/common-subs.crotmp'>

<:macro log-page($_, :$icon = 'question',
  :$is-live, :$is-gist, :$is-day, :$is-search
)>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title><:body></title>
    <link rel="stylesheet" href="/main.css">
    <script src="/bulma-calendar.min.js"></script>

    <script>
      document.addEventListener('DOMContentLoaded', () => { onLoadActions() });
    </script>

    <script>
      function setCookie(name, value) {
          document.cookie = name + "=" + value + ";path=/";
          return value;
      }
      function getCookie(cname) {
          let name = cname + "=";
          let decodedCookie = decodeURIComponent(document.cookie);
          let cookies = decodedCookie.split(';');
          for(let i = 0; i <cookies.length; i++) {
              let c = cookies[i];
              while (c.charAt(0) == ' ') {
                  c = c.substring(1);
              }
              if (c.indexOf(name) == 0) {
                  let cookie = c.substring(name.length, c.length);
                  return cookie == "true"
                    ? true
                    : cookie == "false"
                      ? false
                      : cookie;
              }
          }
          return "";
      }

      function onLoadActions() {
          const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

          if ($navbarBurgers.length > 0) {
              $navbarBurgers.forEach( el => {
                  el.addEventListener('click', () => {
                      const target = el.dataset.target;
                      const $target = document.getElementById(target);
                      el.classList.toggle('is-active');
                      $target.classList.toggle('is-active');
                  });
              });
          }

          var options = {
            displayMode: 'inline',
             showHeader: false,
             showFooter: false,
              weekStart: 1,
             dateFormat: 'yyyy-MM-dd',
              startDate: new Date("<.start-date>"),
                endDate: new Date("<.end-date>"),
                minDate: new Date("<.first-date>"),
                maxDate: new Date("<.last-date>")
              // TODO anyone wanting to add a working minDate: 'today' here?
          };
          var calendars = bulmaCalendar.attach('[id="sidebar-datepicker"]', options);
          for (let i = 0; i < calendars.length; i++) {
              // Add listener to select event
              calendars[i].on('select', date => {
                  window.location = 'this/' + date.data.datePicker.value();
              });
          }

          setDisplay('left-sidebar',  $showLeftSide);
          setDisplay('right-sidebar', $showRightSide);
<?$is-gist>
          hideChannelsWithoutTargets()
</?>
          setGistTargets();
          markSelected();
          filterMessages();
      }

      var $gistTargets = getTargets();
<?$is-gist>
  <!.entries>
      // no entries, but targets in cookie, so go show those
      if ($gistTargets) {
          window.location.href = 'gist.html?' + $gistTargets;
      }
  </!>
</?>

      var $filterMessagesByNick = getCookie("MessagesByNick");
      var $filterMessagesByText = getCookie("MessagesByText");
      var $filterExcludeByNick  = getCookie("ExcludeByNick")  // false;
      var $filterExcludeByText  = getCookie("ExcludeByText")  // false;
      var $showSystemMessages   = getCookie("SystemMessages") // false;
      var $hideCommitMessages   = getCookie("CommitMessages") // false;
      var $hideCameliaOutput    = getCookie("CameliaOutput")  // false;

      var $showLeftSide  = getCookie("showLeftSide")  // false;
      var $showRightSide = getCookie("showRightSide") // false;

      /* Set the width of the sidebar to 300px and the left margin of the page content to 300px */

      function setDisplay(id, state) {
          document.getElementById(id).style.display = state ? "block" : "none";
      }
      function toggleLeftSide() {
          $showLeftSide = setCookie('showLeftSide', !$showLeftSide);
          setDisplay('left-sidebar', $showLeftSide);
      }
      function toggleRightSide() {
          $showRightSide = setCookie('showRightSide', !$showRightSide);
          setDisplay('right-sidebar', $showRightSide);
      }

      function submitSearchIfEnter() {
          if (event.keyCode == 13 && okToSubmitSearch()) {
              document.getElementById('Search').submit();
          }
      }
      function submitSearchOnChannel(channel) {
          document.getElementById('SearchChannel').value = channel;
          document.getElementById('Search').submit();
      }
      function okToSubmitSearch() {
          return document.getElementById('SearchChannel').value;
      }
      function checkChannel() {
          if (okToSubmitSearch()) {
              return true;
          }
          document.getElementById('SearchChannel').focus();
          return false;
      }

<?$is-live>
      function scrollToBottom() {
          window.scrollTo(0, document.body.scrollHeight);
      }
      history.scrollRestoration = "manual";
      window.onload = scrollToBottom;
</?>

<?$is-gist>
      function hideChannelsWithoutTargets() {
          let items = document.querySelectorAll('li[id]');
          for (let i = 0; i != items.length; i++) {
              let item = items[i];
              if (!getTargets(item.getAttribute('id'))) {
                  item.classList.add('is-hidden');
              }
          }
      }
</?>

      function getTargets(channel = '<.channel>') {
          return getCookie(channel + "Targets");
      }

      function setPrimaryByElement(element, primary) {
          if (primary) {
              element.classList.remove('is-primary');
          }
          else {
              element.classList.add('is-primary');
          }
      }

      function setButtons(name, state) {
          let buttons = document.querySelectorAll('button[id=' + name + ']');
          for (let i = 0; i != buttons.length; i++) {
              setPrimaryByElement(buttons[i], state);
          }
      }

      function setVisibilityByElement(element, visible) {
          if (visible) {
              element.classList.remove('is-hidden');
          }
          else {
              element.classList.add('is-hidden');
          }
      }

      function setVisibilityByName(name, visible) {
          let rows = document.getElementsByClassName(name);
          for (let i = 0; i != rows.length; i++) {
              setVisibilityByElement(rows[i], visible);
          }
      }

      function setCheckboxes(name, state) {
          let boxes = document.querySelectorAll('input[id=' + name + ']');
          for (let i = 0; i != boxes.length; i++) {
              boxes[i].checked = state;
          }
      }

      function visibilitySystemMessages(
        show = $showSystemMessages,
        global = true  // by default, set checkboxes + cookie as well
      ) {
<!$is-live>
          if (global) {
              $showSystemMessages = setCookie('SystemMessages', !!show);
              setCheckboxes('SystemMessages', $showSystemMessages);
          }
          setVisibilityByName("special-system", $showSystemMessages)
</!>
      }

      function visibilityCommitMessages(hidden = $hideCommitMessages) {
          $hideCommitMessages = setCookie('CommitMessages', !!hidden);
          setCheckboxes('CommitMessages', $hideCommitMessages);
          setVisibilityByName("special-commit", !$hideCommitMessages)
      }

      function visibilityCameliaOutput(hidden = $hideCameliaOutput) {
          $hideCameliaOutput = setCookie('CameliaOutput', !!hidden);
          setCheckboxes('CameliaOutput', $hideCameliaOutput);
          setVisibilityByName("special-camelia", !$hideCameliaOutput)
      }

      function updateFilter(name, value) {
          let inputs = document.querySelectorAll('input[id=' + name + ']');
          for (let i = 0; i != inputs.length; i++) {
              inputs[i].value = value;
          }
          return setCookie(name, value);
      }

      function containsAnyTexts(haystack, needles) {
          for (let i = 0; i != needles.length; i++) {
              let needle = needles[i].trim();
              if (needle) {
                  if (haystack.toLowerCase().indexOf(needle) != -1) {
                      return true;
                  }
              }
              else {
                  return true;
              }
          }
          return false;
      }

      function containsText(haystack, text) {
          let needle = text.trim();
          return needle
            ? haystack.toLowerCase().indexOf(needle) != -1
            : true;
      }

      function filterMessages(
        nick = $filterMessagesByNick,
        text = $filterMessagesByText
      ) {
          let columns = document.querySelectorAll('td[nick]');

          $filterMessagesByNick = updateFilter("MessagesByNick", nick);
          $filterMessagesByText = updateFilter("MessagesByText", text);
          setButtons('ExcludeByNick', $filterExcludeByNick);
          setButtons('ExcludeByText', $filterExcludeByText);

          if (nick || text) {
              visibilitySystemMessages(false, false);

              let lcNicks = nick.toLowerCase().split(',');
              let lcText  = text.toLowerCase();

              for (let i = 0; i != columns.length; i++) {
                  let column = columns[i];
                  let parent = column.parentElement;

                  let nickOK = nick
                    && containsAnyTexts(column.getAttribute("nick"),lcNicks) == $filterExcludeByNick;
                  let textOK = text
                    && containsText(parent.cells[1].textContent, lcText) == $filterExcludeByText;

                  setVisibilityByElement(
                    parent,
                    (nick && text && nickOK && textOK)
                      || (!nick && textOK)
                      || (!text && nickOK)
                  )
              }
          }

          else {
              for (let i = 0; i != columns.length; i++) {
                  setVisibilityByElement(columns[i].parentElement, true)
              }
              visibilitySystemMessages();
              visibilityCommitMessages();
              visibilityCameliaOutput();
          }
      }

      function filterMessagesByNick(nick) {
          filterMessages(nick, $filterMessagesByText);
      }
      function filterMessagesByText(text) {
          filterMessages($filterMessagesByNick, text);
      }

      function filterExcludeByNick(button) {
          $filterExcludeByNick = setCookie(
            'ExcludeByNick',
            !!button.classList.contains('is-primary')
          );
          filterMessages();
      }
      function filterExcludeByText(button) {
          $filterExcludeByText = setCookie(
            'ExcludeByText',
            !!button.classList.contains('is-primary')
          );
          filterMessages();
      }

      function setGistTargets(targets = $gistTargets) {
          $gistTargets = setCookie('<.channel>Targets', targets);
          document.getElementById('Gist').href =
            '/<.channel>/gist.html?' + targets;
      }

      function elementOfTarget(element, target) {
          return document.querySelector(element + '[target="' + target + '"]');
      }

      function clearGistTargets() {
          setGistTargets("");
          markSelected();
      }

      function addVisibleTargets() {
          let newTargets = $gistTargets.split(',');;
          let haystack   = $gistTargets + ',';
          let trs = document.querySelectorAll('tr[target]');
          for (let i = 0; i != trs.length; i++) {
              let tr = trs[i];
              if (!tr.classList.contains('is-hidden')) {
                  let target = tr.getAttribute('target');
                  if (!haystack.includes(target + ',')) {
                      setTargetSelectionState(target, true);
                      newTargets.push(target);
                  }
              }
          }
          setGistTargets(newTargets.sort().join(','));
      }

      function removeVisibleTargets() {
          let currentTargets = $gistTargets.split(",");
          let newTargets = [];
          for (let i = 0; i != currentTargets.length; i++) {
              let target = currentTargets[i];
              let tr     = elementOfTarget('tr', target);
              if (tr) {
                  if (tr.classList.contains('is-hidden')) {
                      newTargets.push(target);
                  }
                  else {
                      setTargetSelectionState(target, false);
                  }
              }
          }
          setGistTargets(newTargets.sort().join(','));
      }

      function setTargetSelectionState(target, on) {
          let tr = elementOfTarget('tr', target);
          if (tr) {
              if (on) {
                  tr.classList.add('special-selected');
              }
              else {
                  tr.classList.remove('special-selected');
              }
          }
          let option = elementOfTarget('a', target);
          if (option) {
              if (on) {
                  option.classList.add('is-hidden');
                  option.nextSibling.classList.remove('is-hidden');
              }
              else {
                  option.classList.remove('is-hidden');
                  option.nextSibling.classList.add('is-hidden');
              }
          }
      }

      function markSelected() {
          let links = document.querySelectorAll('a[target]');
          let haystack = $gistTargets + ',';
          for (let i = 0; i != links.length; i++) {
              let target = links[i].getAttribute('target');
              setTargetSelectionState(target, haystack.includes(target + ','));
          }
      }

      function removeTargetFromGist(link) {
          let target = link.previousSibling.getAttribute('target');
          let currentTargets = $gistTargets.split(',');
          let newTargets = [];
          let remove = false;
          for (let i = 0; i != currentTargets.length; i++) {
              let current = currentTargets[i];
              if (current) {
                  if (current == target) {
                      remove = true;
                  }
                  else {
                      newTargets.push(current);
                  }
              }
          }
          if (remove) {
              setTargetSelectionState(target, false);
          }
          setGistTargets(newTargets.sort().join(','));
      }

      function addTargetToGist(link) {
          let target = link.getAttribute('target');
          let currentTargets = $gistTargets.split(',');
          let newTargets = [];
          let add = true;
          for (let i = 0; i != currentTargets.length; i++) {
              let current = currentTargets[i];
              if (current) {
                  if (current == target) {
                      add = false;
                  }
                  else {
                      newTargets.push(current);
                  }
              }
          }
          if (add) {
              setTargetSelectionState(target, true);
              newTargets.push(target);
          }
          setGistTargets(newTargets.sort().join(','));
      }
    </script>
  </head>
  <body class="has-navbar-fixed-top">

    <!-- Header -->
    <nav class="navbar is-fixed-top" role="navigation" aria-label="main navigation">

      <div id="navbar-left-toggle"
        class="navbar-filter-settings has-tooltip-bottom"
        title="Toggle search sidebar">
        <a class="navbar-item navbar-sidebar-btn"
          onclick="toggleLeftSide()">
          <span class="icon-text filter">
            <&icon('cogs')>
            <span class="sidebar-title">Search</span>
          </span>
          <&icon('chevron-left')>
        </a>
      </div>

      <div class="navbar-brand">

        <a href="/" class="navbar-item" 
          title="Go to the home page of the Raku IRC log browser"
        ><img src="/camelia.png" width="40" height="28"></a>

        <!-- Add action to open modal window with channels or the right sidebar -->
        <div class="navbar-item dropdown is-hoverable">
          <div class="dropdown-trigger">
            <span
<?$is-live>
              title="Select the channel of which to see the
messages as they come in."
</?>
<?$is-day>
              title="Select the channel of which to show
the messages of <.date-human>."
</?>
<?$is-gist>
              title="Select the channel of which to show
the selected messages."
</?>
<?$is-search>
              title="Select the channel on which to
repeat the current search."
</?>
              class="is-text navbar-current-channel-name"
              aria-haspopup="true"
              aria-controls="dropdown-menu4">
              <span class="icon-text">
                <&icon($icon)><span><.channel></span><&icon('chevron-down')>
              </span>
            </span>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
<@channels : $c>
  <?{ .channel ne $c }>
                    <li id="<$c>">
                      <a
                        <?$is-live>href="/<$c>/live.html"</?>
                        <?$is-day> href="/<$c>/<.date>.html"</?>
                        <?$is-gist> href="/<$c>/gist.html"</?>
                        <?$is-search> onClick="submitSearchOnChannel('<$c>')"</?>
                      ><$c></a>
                    </li>
  </?>
</@>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

        <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navMenu">
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </a>
      </div>

      <div class="navbar-menu">
        <div class="navbar-item">
          <span class="is-text" style="font-size:125%">
            <?$is-live>Live</?>
            <?$is-day>Day</?>
            <?$is-gist>Gist</?>
            <?$is-search>Search</?>
          </span>
        </div>
      </div>

      <div id="navMenu" class="navbar-menu">
        <div class="navbar-start">
        <div class="navbar-item dropdown is-hoverable">
          <div class="navbar-delimiter"></div>
          <div class="dropdown-trigger">
            <span class="is-text navbar-current-channel-name"
              title="Select the way you would like to
browse the messages on the #<.channel> channel."
              aria-haspopup="true"
              aria-controls="dropdown-menu4">
              <span class="icon-text">
                <&icon('book')><span>Browse</span><&icon('chevron-down')>
              </span>
            </span>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
<!$is-live>
                    <li title="Follow the messages on the #<.channel>
channel as they are happening.  Allows
scrolling-back in time.">
                      <a href="/<.channel>/live.html">
                        <&icon('signal')>
                        <span>Live</span>
                      </a>
                    </li>
</!>
                    <li title="Look at messages of the last date
for which messages have been seen
on the #<.channel> channel.">
                      <a href="/<.channel>/today">
                        <&icon('inbox')>
                        <span>Today</span>
                      </a>
                    </li>
                    <li title="Look at the messages of a
randomly selected date on the
#<.channel> channel for that special
serendipitous experience.">
                      <a href="/<.channel>/random">
                        <&icon('random')>
                        <span>I Feel Lucky</span>
                      </a>
                    </li>
<?$is-day>
                    <li title="Download the raw log of the #<.channel>
channel on <.date-human>.">
                      <a href="/<.channel>/<.date>.log">
                        <&icon('download')>
                        <span>Raw</span>
                      </a>
                    </li>
</?>
                    <li title="Look at an overview of the
#<.channel> channel and some background information.">
                      <a href="/<.channel>/index.html">
                        <&icon('star')>
                        <span>Overview</span>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="navbar-item dropdown is-hoverable">
          <div class="navbar-delimiter"></div>
          <div class="dropdown-trigger">
            <span class="is-text navbar-current-channel-name"
              title="A message can be added or removed from
your collection of messages for the #<.channel>
channel from the ... pulldown with each message.
Here you can select on what to do with that
selection."
              aria-haspopup="true"
              aria-controls="dropdown-menu4">
              <span class="icon-text">
                <&icon('shopping-cart')><span>Gist</span><&icon('chevron-down')>
              </span>
            </span>
          </div>
          <div class="dropdown-menu navbar-channels-dropdown" id="dropdown-menu4" role="menu">
            <div class="dropdown-content">
              <div class="dropdown-item">
                <div class="menu">
                  <ul class="menu-list">
                    <li title="Show the messages of the #<.channel>
channel that have been collected by
you so far, or save the link for other
uses.">
                      <a id="Gist" href="/<.channel>/gist.html">
                        <span>Show&nbsp;collected&nbsp;messages</span>
                      </a>
                    </li>
                    <li title="Reset the current selection
of messages to be shown in
a gist.">
                      <a onclick="clearGistTargets()">
                        <span>Clear&nbsp;selected&nbsp;messages</span>
                      </a>
                    </li>
                    <li title="Add the currently visible
messages to the selection of
messages to be shown in a gist.">
                      <a onclick="addVisibleTargets()">
                        <span>Select&nbsp;all&nbsp;visible&nbsp;messages</span>
                      </a>
                    </li>
                    <li title="Remove all currently visible
messages from the selection
(if they were selected), while
keeping any non-visible messages
in the selection.">
                      <a onclick="removeVisibleTargets()">
                        <span>Unselect&nbsp;all&nbsp;visible&nbsp;messages</span>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

          <!-- Mobile only forms in header -->
          <div id="mobile-forms" class="is-hidden-tablet">
  <!-- TODO: center text here -->
            <table width="100%">
              <tr>
                <td><&text-messages-input></td>
                <td><&nick-messages-input></td>
              </tr>
            </table>
            <table width="100%">
<!$is-live>
              <tr>
                <td colspan="2"><&system-messages-box></td>
              </tr>
</!>
              <tr>
                <td><&commit-messages-box></td>
                <td><&camelia-messages-box></td>
              </tr>
            </table>
            <hr/>
            <form id="Search" action="/search.html"
              onsubmit="return checkChannel()">
              <table width="100%">
                <tr>
                  <td><&search-query($_)></td>
                  <td><p>&nbsp;</p><&search-type($_)></td>
                </tr><tr>
                  <td><&search-all-words($_)></td>
                  <td><&search-ignorecase($_)></td>
                </tr>
                <tr><td><&search-nicks($_)></td></tr>
                <tr><td><&search-include-aliases($_)></td></tr>
                <tr>
                  <td><&search-channel($_)></td>
                  <td><&search-message-type($_)></td>
                  <td><&search-entries-pp($_)></td>
                </tr>
              </table>
              <table>
                <tr>
                  <td><&search-from($_)></td>
                  <td><&search-until($_)></td>
                </tr>
              </table>
              <&search-submit($_)>
            </form>
          </div>
          <!-- Mobile only forms in header ends -->

        </div>
      </div>
      </div>

      <div id="navbar-right-toggle"
        class="navbar-end has-tooltip-bottom is-hidden-touch"
        title="Toggle filter sidebar">
        <a class="navbar-item navbar-channels navbar-sidebar-btn"
          onClick="toggleRightSide()">
          <&icon('chevron-right')>
          <span class="icon-text">
            <&icon('cogs')>
            <span class="sidebar-title">Filter</span>
          </span>
        </a>
      </div>

    </nav>
    <!-- header ends -->

    <!-- Left sidebar  -->
    <div id="wrapper">
      <div class="columns">
        <div id="left-column" class="column is-narrow is-hidden-mobile">
          <div id="left-sidebar" class="sidebar is-hidden-mobile"
            style="display: none">
            <form id="Search" action="/search.html"
              onsubmit="return checkChannel()">
              <&search-query($_)>
              <&search-type($_)>
              <&search-all-words($_)>
              <&search-ignorecase($_)>
              <&search-nicks($_)>
              <&search-include-aliases($_)>
              <&search-channel($_)>
              <&search-message-type($_)>
              <&search-entries-pp($_)>
              <&search-from($_)>
              <&search-until($_)>
              <&search-submit($_)>
            </form>
          </div>
        </div>
        <!-- Left sidebar ends -->

        <!-- main container -->
        <div class="column">

          <section class="section">
            <div id="main-container" class="container">

<?$is-day>
              <nav class="level">
                <!-- Left side -->
                <div class="level-left">
                  <div class="level-item">
                    <div class="msg-log-date-switcher">
                      <a href="/<.channel>/prev/<.date>">
                        <button class="button is-primary">
                          <&icon('chevron-left')>
                        </button>
                      </a>
                      <span class="title is-4 today-date"><.date-human></span>
                      <a href="/<.channel>/next/<.date>">
                        <button class="button is-primary">
                          <&icon('chevron-right')>
                        </button>
                      </a>
                      <div class="navbar-item dropdown is-hoverable">
                        <div class="dropdown-trigger">
                          <button class="button is-primary">
                            <&icon('calendar')>
                          </button>
                        </div>
                        <div class="dropdown-menu">
                          <div class="dropdown-content">
                            <input id="sidebar-datepicker" type="date">
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </nav>
</?>

              <!-- message log -->
              <section id="message-log">
                <table class="table message-table is-fullwidth">
<?.initial-topic-text>
                  <tr class="special-topic">
                    <td colspan="4">
                      <&HTML(.initial-topic-text)><br/>
                      Set by <&HTML(.initial-topic-nick)> on
                      <a href="/<.channel>/<.initial-topic-date>.html#<.initial-topic-relative-target>"><.initial-topic-human-date></a>.
                    </td>
                  </tr>
</?>
<@entries>
  <!$is-day>
    <?.human-date>
                      <tr class="special-date">
                        <td colspan="4"><.human-date></td>
                      </tr>
    </?>
  </!>
                  <tr<?.relative-target> id="<.relative-target>"</?>
                    <?.target>target="<.target>"</?>
                    <?.control-events> class="special-system"</?>
                    <?.commit> class="special-commit"</?>
                    <?.camelia> class="special-camelia"</?>
                    <?.test-t> class="special-test"</?>
                    <?.same-nick> class="special-same-nick"</?>
                    <?$is-gist> class="special-selected"</?>
                  >
  <?.control-events>
                      <td/>
                      <td colspan="2">
                        <div class="is-size-7">
                          <@control-events>
                            <b id="<.id>"><.hh-mm></b>
                            <&HTML(.message)>
                          </@>
                        </div>
                      </td>
  </?>
  <!.control-events>
                      <td nick="<&HTML(.nick)>"><!.same-nick><&HTML(.sender)></!></td>
                      <td
                        <?.code> class="column-code"</?>
                        <?.commit> class="column-commit"</?>
                      ><?.targets><@targets><span id="<$_>"/></@></?><&HTML(.message)></td>
                      <td class="column-time"><.hh-mm></td>
  </!>
                    <td class="column-buttons">
                      <div class="dropdown is-hoverable">
                        <div class="dropdown-trigger">
                          <button class="button is-text" aria-haspopup="true" aria-controls="dropdown-menu4">
                            <span class="icon is-small">
                              <i class="fas fa-ellipsis-h" aria-hidden="true"></i>
                            </span>
                          </button>
                        </div>
                        <div class="dropdown-menu msg-mobile-dropdown" id="dropdown-menu4" role="menu">
                          <div class="dropdown-content">
                            <div class="dropdown-item">
                              <div class="menu">
                                <ul class="menu-list">
                                  <li><&day-link($_, $is-day)></li>
                                  <li><&gist-link($_)></li>
<?.runcode-link>
                                  <li><&runcode-link($_)></li>
</?>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </td>
                  </tr>
                </@>
                </table>

              </section>
              <!-- message log ends -->

            </div>
          </section>
          <&footer>

        </div>
        <!-- main container ends -->

        <!-- Right sidebar -->
        <div id="right-column" class="column is-narrow is-hidden-touch">
          <!-- We have an empty sidebar here so the content would be nicely centered -->
          <div id="right-sidebar" class="sidebar is-hidden-mobile"
            style="display: none">
            <&text-messages-input>
            <&nick-messages-input>
<?$is-day>
            <&system-messages-box('block')>
</?>
            <&commit-messages-box('block')>
            <&camelia-messages-box('block')>
          </div>
        </div>
        <!-- Right sidebar ends -->

      </div>
    </div>
    <!-- Columns end -->

    <!-- Include Font Awesome -->
    <script defer src="/fontawesome.js"></script>

  </body>
</html>
</:>
