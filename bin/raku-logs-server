#!/usr/bin/env raku --ll-exception

use v6.*;

use App::IRC::Log:ver<0.0.34>:auth<zef:lizmat>;
use App::Raku::Log:ver<0.0.7>:auth<zef:lizmat>;
use IRC::Log::Colabti:ver<0.0.35>:auth<zef:lizmat>;
use Cro::HTTP::Server:ver<0.8.6>;

my constant $log-class = IRC::Log::Colabti;

my %*SUB-MAIN-OPTS = :named-anywhere;
sub MAIN(
  IO()  $log-dir  = 'IRC-logs',
  IO()  $base-dir = "base",
  IO() :$rendered-dir     = $base-dir.add('rendered'),
  IO() :$state-dir        = $base-dir.add('state'),
  IO() :$static-dir       = $base-dir.add('static'),
  IO() :$template-dir     = $base-dir.add('template'),
  IO() :$zip-dir          = $base-dir.add('zip'),
  IO() :$descriptions-dir = $base-dir.add('descriptions'),
  IO() :$one-liners-dir   = $base-dir.add('one-liners'),
       :$host   = 'localhost',
       :$port   = 10000,
       :$batch  = 16,
       :$degree = Kernel.cpu-cores,
       :$channels,
       :$dontstart,
  ) {

    my @channels = $channels
      ?? $channels.split(",")
      !! channel-ordering(App::IRC::Log.default-channels($log-dir));

    my $ail := App::IRC::Log.new:
      :$log-class, :$log-dir,
      :$rendered-dir, :$state-dir, :$static-dir, :$template-dir, :$zip-dir,
      colorize-nick => &colorize-nick,
      htmlize       => &htmlize,
      live-plugins  => live-plugins(),
      day-plugins   => day-plugins(),
      descriptions  => descriptions($descriptions-dir),
      one-liners    => one-liners($one-liners-dir),
      batch         => $batch,
      degree        => $degree,
      channels      => @channels,
    ;

    if $dontstart {
        $ail.channels.map: { $ail.clog($_); say "Loaded $_" }
    }
    else {
        my $service := Cro::HTTP::Server.new:
          :application($ail.application),
          :$host, :$port,
        ;
        $service.start;
        say "The website is started at http://$host:$port/";

        react whenever signal(SIGINT) {
            $service.stop;
            $ail.shutdown;
            exit;
        }
    }
}
